pipeline{
    agent any
    environment{
        AWS_ACCESS_KEY_ID = credentials("AWS_ACCESS_KEY_ID")
        AWS_SECRET_ACCESS_KEY = credentials("AWS_SECRET_ACCESS_KEY") 
        GITHUB_PASSWORD = credentials("GITHUB_PASSWORD")
        region ="us-east-2"
    }
    stages{
        stage('Checkout SCM'){
            steps{
                scripts{
                    checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'GITHUB_PASSWORD', url: 'https://github.com/wisdom2608/terraform-workspaces']])
                }
            }
        }
        stage('Initialzing Terraform'){
            steps{
                scripts{
                    dir('Terraform-workspace'){
                        sh 'terraform init'
                    }
                }
            }
        }
        stage('Formating Terraform'){
            steps{
                scripts{
                    dir('Terraform-workspace'){
                        sh 'terraform fmt'
                    }
                }
            }
        }
        stage('Validating Terraform'){
            steps{
                scripts{
                    dir('Terraform-workspace'){
                        sh 'terraform validate'
                    }
                }
            }
        }
        stage('Initialzing Dev'){
            steps{
                scripts{
                    dir('Terraform-workspace'){
                        sh 'terraform init -var-file=dev.tfbackend'
                    }
                }
            }
        }
        stage('Creating Dev resources'){
            steps{
                scripts{
                    dir('Terraform-workspace'){
                        sh 'terraform apply -var-file=dev.tfvars -auto-appy'
                    }
                }
            }
        }
        stage('Initialzing Staging Environment'){
            steps{
                scripts{
                    dir('Terraform-workspace'){
                        sh 'terraform init -var-file=stage.tfbackend'
                    }
                }
            }
        }
        stage('Creating Staging resources'){
            steps{
                scripts{
                    dir('Terraform-workspace'){
                        sh 'terraform apply -var-file=stage.tfvars -auto-appy'
                    }
                }
            }
        }
        stage('Initialzing Prod Evn'){
            steps{
                scripts{
                    dir('Terraform-workspace'){
                        sh 'terraform init -var-file=prod.tfbackend'
                    }
                }
            }
        }
        stage('Creating Prod resources'){
            steps{
                scripts{
                    dir('Terraform-workspace'){
                        sh 'terraform apply -var-file=prod.tfvars -auto-appy'
                    }
                }
            }
        }
        
    }
}